# vim: set ft=ansible:
---
- name: Workshop users
  hosts: localhost
  become: yes
  vars_files:
    - "bu-workshop_vars.yml"
  tasks:

  - name: Add user to htpasswd file 
    command: "htpasswd -b /etc/origin/master/htpasswd {{ user }} openshift3"

  - name: Set Gitlab internal hostname
    set_fact: 
      gitlab_hostname: 'gitlab-ce.workshop-infra.svc.cluster.local'  
    tags:
      - "gitlab-hostname"

  - name: Get root user token
    uri:
      url: 'http://gitlab-ce.workshop-infra.svc.cluster.local/api/v3/session'
      body: 'login=root&password=password'
      method: POST
      status_code: 201
    register: root_token_out
    until: root_token_out|success
    retries: 3
    delay: 60
    tags:
      - "gitlab-get-root-token"

  - name: Create root token fact
    set_fact:
      root_token: '{{root_token_out.json.private_token}}'
    tags:
      - "gitlab-root-token-fact"

  - name: 'Check for user in GitLab'
    uri:
      url: 'http://gitlab-ce.workshop-infra.svc.cluster.local/api/v3/users?username=user{{user}}'
      HEADER_PRIVATE-TOKEN: "{{root_token}}"
      method: GET
      status_code: 200
      return_content: yes
    register: user_result
    ignore_errors: true
  
  - name: 'Create user'
    uri:
      url: 'http://{{gitlab_hostname}}/api/v3/users'
      HEADER_PRIVATE-TOKEN: "{{root_token}}"
      body: 'confirm=false&email=user{{user}}@example.com&username=user{{user}}&name=user{{user}}&password=openshift3'
      method: POST
      status_code: 201
      return_content: no
    register: result
    until: result|success
    retries: 3
    delay: 60
    when: 'user_result.json == []'

  - name: 'Get user{{user}} token'
    uri:
      url: 'http://{{gitlab_hostname}}/api/v3/session'
      body: 'login=user{{user}}&password=openshift3'
      method: POST
      status_code: 201
    register: token_out
    until: token_out|success
    retries: 3
    delay: 60
  
  - name: Check if user{{user}}'s project exists
    uri:
      url: 'http://{{gitlab_hostname}}/api/v3/projects/user{{user}}%2Fnationalparks'
      HEADER_PRIVATE-TOKEN: "{{token_out.json.private_token}}"
      method: GET
      status_code: 404
      return_content: no
    register: project_absent
    ignore_errors: true
  
  - name: 'Import nationalparks repository for user{{user}}'
    uri:
      url: 'http://{{gitlab_hostname}}/api/v3/projects'
      HEADER_PRIVATE-TOKEN: "{{token_out.json.private_token}}"
      body: 'name=nationalparks&import_url=https://github.com/openshift-roadshow/nationalparks&public=true'
      method: POST
      status_code: 201
      return_content: no
    register: result
    until: result|success
    retries: 3
    delay: 60
    when: project_absent | success

