
# ######################## Generate CF Template
# - name: Generate CloudFormation Template
#  template: src=files/cf_templates/cf.{{config}}.template.j2 dest=/tmp/cf.{{config}}.{{guid}}.json
#  tags: [ provisioning, gen_cf_template]
#
# ## This part is temporary until we consolidate file structure into Environments/{{config}}
#

## Backward compatability for bu-workshop

# - name: Generate CloudFormation Template from old location
#   template: src=files/cf_templates/cf.{{config}}.template.j2 dest=/tmp/cf.{{config}}.{{guid}}.json
#   ignore_errors: true
#
#   tags: [ provisioning, gen_cf_template]

## New method for Environments/{{config}} file structure


- name: Generate CloudFormation Template from  the new location
  template: src=../Environments/{{config}}/files/cf.{{config}}.template.j2 dest=/tmp/cf.{{config}}.{{guid}}.json
  ignore_errors: true
  tags: [ provisioning, gen_cf_template]

######################### Launch CF Template
- name: Launch CloudFormation template
  cloudformation:
    stack_name: "{{project_tag}}"
    state: "present"
    region: "{{aws_region}}"
    disable_rollback: false
    template: "/tmp/cf.{{config}}.{{guid}}.json"
    tags:
      Stack: "project {{project_tag}}"
  tags: [ provisioning, provision_cf_template]
  register: cloudformation_out

- name: Store S3 Bucket ID
  set_fact:
    s3_bucket: "{{ cloudformation_out.stack_outputs.RegistryS3Output }}"

- debug:
    msg: "bucket is {{ s3_bucket }}"
- name: Store internal route53 ID
  set_fact:
    internal_zone_id: "{{ cloudformation_out.stack_outputs.Route53internalzoneOutput }}"

- name: debug internal dns zone id
  debug:
    var: internal_zone_id
#- name: get route53 hosts
#  shell: aws route53 list-hosted-zones-by-name --dns-name {{zone_public_dns}} --output text | awk '/zonepub/ {print $3}'
#  register: domain_id
  #- debug: var="{{domain_id.stdout}}"
#- name: get route53 hosts
#  shell: aws route53 get-hosted-zone --id "{{domain_id.stdout}}" --output text | awk '/NAMESERVERS/ {print $2}'
#  register: name_servers
  #- debug: msg="{{item}}"
#  with_items: name_servers.stdout_lines
#- debug: msg="Need to create dns record on ipa\n ipa dnsrecord-add opentlc.com {{subdomain_base_short}} --ns-hostname={{name_servers.stdout_lines[0]}}. --ttl=100"
#  when: "{{idm}}"
